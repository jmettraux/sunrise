#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'

require 'time'

#require 'ruby-sun-times'
require 'sun_times'

$: << 'lib'
require 'sunrise_moon'


#p ARGV

if ARGV.include?('-h') || ARGV.include?('--help')
  puts
  puts 'sunrise'
  puts
  puts 'USAGE'
  puts
  puts 'bin/sunrise 790-06-17 28 61.09603 4.70432 solar'
  puts '  lists the sunrise/set for 28 days from 790-06-17'
  puts '  somewhere in Norway, using solar time (not timezone time)'
  puts
  exit 0
end

args = ARGV.inject({ rest: [] }) { |h, a|
  if a.match?(/^-?\d{1,4}-\d{1,2}-\d{1,2}$/)
    t = Time.parse("#{a} 12:00:00")
    h[:to] ||= (h[:from] && t)
    h[:from] ||= t
  elsif a.match?(/^-?\d+\.\d+$/)
    f = a.to_f
    h[:lon] ||= (h[:lat] && f)
    h[:lat] ||= f
  elsif a.match?(/^\d+$/)
    h[:count] = a.to_i
  else
    h[:rest] << a
  end
  h }

args[:from] ||= Time.now
args[:count] ||= 7
args[:lat] ||= 50.77473 # Aachen
args[:lon] ||=  6.08405 #
#p args

puts "position: #{args[:lat]} / #{args[:lon]}"

count = 0
t = args[:from]
st = SunTimes.new

moon = args[:rest].include?('m') || args[:rest].include?('moon')
if moon
  t1 = args[:to] || (args[:from] + args[:count] * 24 * 3600)
  moon = Sunrise::Moon.times(args[:from], t1, args[:lon])
end

loop do

  d = Date.new(t.year, t.month, t.day)

  ri = st.rise(d, args[:lat], args[:lon])
  se = st.set(d, args[:lat], args[:lon])
  lt = (se - ri).to_i

  s = lt; h = s / 3600
  s = s - h * 3600; m = s / 60
  s = s - m * 60
  light = "%dh%02dm%02ds" % [ h, m, s ]

  da = t.strftime('%F')
  if args[:rest].include?('solar') || args[:rest].include?('s')
    noon = Time.parse("#{da} 12:00:00")
    ri = (noon - lt / 2)
    se = (noon + lt / 2)
  end
  ri = ri.strftime('%T')
  se = se.strftime('%T')

  m = moon && moon[da]
  m = m && "  #{m[2].strftime('%H:%M')} #{m[1].to_s.gsub(/_/, ' ')}#{m[3] ? ', ' + m[3].downcase : ''}"

  #p [ da, ri, se, lt ]
  #puts "#{da} â˜¼ #{ri} --> â˜€ #{se}  (#{light})"
  puts "#{da} â†— #{ri} â†˜ #{se}  â†¦ #{light}#{m}"

  # loop

  count += 1
  t = t + 24 * 3600

  break if args[:count] && count > args[:count]
  break if args[:to] && t > args[:to]
end

#    MOON = 'ðŸŒœ  '
#    SUN = 'â˜¼ '
#
#    MNML = 'ðŸŒ‘ï¸Ž' # new moon
#    MNMD = 'ðŸŒ•ï¸Ž'
#    MFQ = 'â˜½ï¸Ž' # first quarter
#    MFML = 'ðŸŒ•ï¸Ž' # full moon
#    MFMD = 'ðŸŒ‘ï¸Ž'
#    MLQ = 'â˜¾' # last quarter

